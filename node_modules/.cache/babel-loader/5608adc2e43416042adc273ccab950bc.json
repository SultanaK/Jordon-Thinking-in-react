{"ast":null,"code":"var _jsxFileName = \"/Users/supermane/Desktop/THINKFUL/june28/thinking-in-react/src/Subtotal.js\";\nimport React from 'react';\nexport default function Subtotal(props) {\n  var total = Object.keys(props.selected).reduce(function (acc, curr) {\n    return acc + props.selected[curr].cost;\n  }, 0);\n  return React.createElement(\"div\", {\n    className: \"summary__total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"summary__total__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Your Price: \"), React.createElement(\"div\", {\n    className: \"summary__total__value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(total)));\n}","map":{"version":3,"sources":["/Users/supermane/Desktop/THINKFUL/june28/thinking-in-react/src/Subtotal.js"],"names":["React","Subtotal","props","total","Object","keys","selected","reduce","acc","curr","cost","Intl","NumberFormat","style","currency","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,QAAlB,EACTC,MADS,CACF,UAACC,GAAD,EAAMC,IAAN;AAAA,WAAeD,GAAG,GAAGN,KAAK,CAACI,QAAN,CAAeG,IAAf,EAAqBC,IAA1C;AAAA,GADE,EAC8C,CAD9C,CAAd;AAGA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAGI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAAEC,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAA/B,EACIC,MADJ,CACWZ,KADX,CADL,CAHJ,CADJ;AAUH","sourcesContent":["import React from 'react'\n\nexport default function Subtotal(props) {\n    const total = Object.keys(props.selected)\n        .reduce((acc, curr) => acc + props.selected[curr].cost, 0);\n\n    return (\n        <div className=\"summary__total\">\n            <div className=\"summary__total__label\">Your Price: </div>\n\n            <div className=\"summary__total__value\">\n                {new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' })\n                    .format(total)}\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}